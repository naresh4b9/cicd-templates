name: CI/CD Template

on:
  workflow_call:
    inputs:
      branch-name:
        required: true
        type: string
      environment:
        required: true
        type: string
      docker-image-tag:
        required: true
        type: string

jobs:
  # -----------------------
  # CODEQL SCAN
  # -----------------------
  codeql-scan:
    name: CodeQL Analysis
    runs-on: ubuntu-latest

    # NOTE: Do NOT set permissions here in a reusable workflow. The caller must provide them.
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python         # change if you want to scan multiple langs

      - name: Autobuild (optional for Python; CodeQL may not require it)
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # -----------------------
  # BUILD + TRIVY + PUSH + DEPLOY
  # -----------------------
  build-and-deploy:
    name: Build, Scan, and Deploy
    runs-on: ubuntu-latest
    needs: codeql-scan

    env:
      DOCKER_USERNAME: nareshpama
      # DOCKER_PAT is passed as a secret from caller; map to env here
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PAT }}
      REGISTRY: docker.io
      IMAGE_NAME: project-poc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          registry: ${{ env.REGISTRY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get short commit SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          echo "Building Docker image: ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}"
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
        continue-on-error: true

      - name: Push Docker image
        run: |
          echo "Pushing Docker image: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}"
          docker tag ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }} \
            ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}

      - name: Deploy to environment
        run: |
          echo "Deploying ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }} to environment ${{ inputs.environment }}"
          # Replace with your real deploy command(s)
